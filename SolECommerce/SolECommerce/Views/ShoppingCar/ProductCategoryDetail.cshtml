@model ProductCatalogViewModel;
@{
    ViewData["Title"] = "ProductCategoryDetail";
}



<div class="row mt-5">

    <input type="hidden" value="@Model.ProductId" id="hdnProductId" />

    <div class="col-md-4">
        <img class="card-img-top" src="@Model.ImageURL" alt="@Model.ProductName">
    </div>

    <div class="col-md-8">
        <div class="row">
            <div class="col-md-12">
                <h6 class="text-secondary">@Model.BrandName</h6>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h5>@Model.ProductName</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <p>
                    <i class="fa-solid fa-money-bill-1 text-success" style="font-size:50px;"></i>
                    <span class="text-secondary" style="font-size:40px; text-decoration: line-through;">@Model.OriginalPrice</span>
                    <span class="text-success" style="font-size:60px;">@Model.FinalPrice</span>
                    <span class="text-danger font-weight-bold">- @Model.Discount %</span>
                </p>

                <p>
                    @if (Model.FreeShipping.HasValue)
                    {
                        <span><i class="@((Model.FreeShipping.Value)? "text-success fa-solid fa-circle-check" : "text-danger fa-solid fa-circle-xmark") "></i> Envio Gratis </span>
                    }
                </p>

                <p>
                    @if (Model.HomeDelivery.HasValue)
                    {
                        <span><i class="@((Model.HomeDelivery.Value)? "text-success fa-solid fa-circle-check" : "text-danger fa-solid fa-circle-xmark") "></i> Delivery Permitido </span>
                    }
                </p>

                <p>
                    @if (Model.PickupInStore.HasValue)
                    {
                        <span><i class="@((Model.PickupInStore.Value)? "text-success fa-solid fa-circle-check" : "text-danger fa-solid fa-circle-xmark") "></i> Recojo en Tienda </span>
                    }
                </p>

                <p>
                    <b>Description:</b> @Model.Description
                </p>

                <p>

                    <button class="btn btn-danger"><i class="fa-solid fa-minus"></i></button>

                    <input class="form-control" id="txtQuantity" type="text" style="width:50px;" />

                    <button class="btn btn-success"><i class="fa-solid fa-plus"></i></button>
                </p>


                <button id="btnAnadir" class="btn btn-primary"><i class="fa-solid fa-cart-plus"></i> Añadir</button>

                <a asp-controller="ShoppingCar" asp-action="ConfirmShoppingCar" class="btn btn-primary"> Confirmar Compra</a>

                <a asp-controller="ShoppingCar" asp-action="ProductCatalog" class="btn btn-secondary"> Volver</a>

 
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">

        $(document).ready(function() {
            $("#btnAnadir").click(() => { addTemporalProduct(); });
            //document.getElementById("btnAnadir").addEventListener("click", ()=> {  alert('HOLA MUNDO') });
        });

        const addTemporalProduct = () => {
            const quantity = $("#txtQuantity").val();
            const productId = $("#hdnProductId").val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddTemporalProduct","ShoppingCar")',
                data: {
                    "Id": productId,
                    "ProductQuantity": quantity
                },
                success: () => {
                    alert("Se añadio el producto satisfactoriamente");
                    $("#txtQuantity").val("");
                },
                error: (ex, det) => {
                    console.log("ERROR =>", ex, det);
                }
            });
        }
    
        
    </script>
    
}